<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lqblog.lbg.mapper.LbgArticleMapper" >
  <resultMap id="BaseResultMap" type="com.lqblog.lbg.model.LbgArticle" >
    <id column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="article_no" property="articleNo" jdbcType="INTEGER" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="count_view" property="countView" jdbcType="INTEGER" />
    <result column="count_rss" property="countRss" jdbcType="INTEGER" />
    <result column="count_comment" property="countComment" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_user" property="createdUser" jdbcType="VARCHAR" />
    <result column="created_user_name" property="createdUserName" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="updated_user" property="updatedUser" jdbcType="VARCHAR" />
    <result column="updated_user_name" property="updatedUserName" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lqblog.lbg.model.LbgArticle" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    article_id, title, category_id, category_name, article_no, tag, author, count_view, 
    count_rss, count_comment, created_time, created_user, created_user_name, updated_time, 
    updated_user, updated_user_name, version
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lqblog.lbg.model.LbgArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lbg_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lqblog.lbg.model.LbgArticleExample" >
    <include refid="MySqlPaginationPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lbg_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MySqlPaginationSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lbg_article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from lbg_article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lqblog.lbg.model.LbgArticleExample" >
    delete from lbg_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lqblog.lbg.model.LbgArticle" >
    insert into lbg_article (article_id, title, category_id, 
      category_name, article_no, tag, 
      author, count_view, count_rss, 
      count_comment, created_time, created_user, 
      created_user_name, updated_time, updated_user, 
      updated_user_name, version, content
      )
    values (#{articleId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{categoryName,jdbcType=VARCHAR}, #{articleNo,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{countView,jdbcType=INTEGER}, #{countRss,jdbcType=INTEGER}, 
      #{countComment,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=VARCHAR}, 
      #{createdUserName,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, #{updatedUser,jdbcType=VARCHAR}, 
      #{updatedUserName,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lqblog.lbg.model.LbgArticle" >
    insert into lbg_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="articleNo != null" >
        article_no,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="countView != null" >
        count_view,
      </if>
      <if test="countRss != null" >
        count_rss,
      </if>
      <if test="countComment != null" >
        count_comment,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdUser != null" >
        created_user,
      </if>
      <if test="createdUserName != null" >
        created_user_name,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedUser != null" >
        updated_user,
      </if>
      <if test="updatedUserName != null" >
        updated_user_name,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="articleNo != null" >
        #{articleNo,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="countView != null" >
        #{countView,jdbcType=INTEGER},
      </if>
      <if test="countRss != null" >
        #{countRss,jdbcType=INTEGER},
      </if>
      <if test="countComment != null" >
        #{countComment,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null" >
        #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lqblog.lbg.model.LbgArticleExample" resultType="java.lang.Integer" >
    select count(*) from lbg_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lbg_article
    <set >
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.articleNo != null" >
        article_no = #{record.articleNo,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null" >
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.countView != null" >
        count_view = #{record.countView,jdbcType=INTEGER},
      </if>
      <if test="record.countRss != null" >
        count_rss = #{record.countRss,jdbcType=INTEGER},
      </if>
      <if test="record.countComment != null" >
        count_comment = #{record.countComment,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUser != null" >
        created_user = #{record.createdUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createdUserName != null" >
        created_user_name = #{record.createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedUser != null" >
        updated_user = #{record.updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedUserName != null" >
        updated_user_name = #{record.updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update lbg_article
    set article_id = #{record.articleId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      article_no = #{record.articleNo,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      count_view = #{record.countView,jdbcType=INTEGER},
      count_rss = #{record.countRss,jdbcType=INTEGER},
      count_comment = #{record.countComment,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_user = #{record.createdUser,jdbcType=VARCHAR},
      created_user_name = #{record.createdUserName,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_user = #{record.updatedUser,jdbcType=VARCHAR},
      updated_user_name = #{record.updatedUserName,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lbg_article
    set article_id = #{record.articleId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      article_no = #{record.articleNo,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      count_view = #{record.countView,jdbcType=INTEGER},
      count_rss = #{record.countRss,jdbcType=INTEGER},
      count_comment = #{record.countComment,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_user = #{record.createdUser,jdbcType=VARCHAR},
      created_user_name = #{record.createdUserName,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_user = #{record.updatedUser,jdbcType=VARCHAR},
      updated_user_name = #{record.updatedUserName,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lqblog.lbg.model.LbgArticle" >
    update lbg_article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="articleNo != null" >
        article_no = #{articleNo,jdbcType=INTEGER},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="countView != null" >
        count_view = #{countView,jdbcType=INTEGER},
      </if>
      <if test="countRss != null" >
        count_rss = #{countRss,jdbcType=INTEGER},
      </if>
      <if test="countComment != null" >
        count_comment = #{countComment,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        created_user_name = #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUser != null" >
        updated_user = #{updatedUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lqblog.lbg.model.LbgArticle" >
    update lbg_article
    set title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      article_no = #{articleNo,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      count_view = #{countView,jdbcType=INTEGER},
      count_rss = #{countRss,jdbcType=INTEGER},
      count_comment = #{countComment,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_user = #{createdUser,jdbcType=VARCHAR},
      created_user_name = #{createdUserName,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_user = #{updatedUser,jdbcType=VARCHAR},
      updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lqblog.lbg.model.LbgArticle" >
    update lbg_article
    set title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      article_no = #{articleNo,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      count_view = #{countView,jdbcType=INTEGER},
      count_rss = #{countRss,jdbcType=INTEGER},
      count_comment = #{countComment,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_user = #{createdUser,jdbcType=VARCHAR},
      created_user_name = #{createdUserName,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_user = #{updatedUser,jdbcType=VARCHAR},
      updated_user_name = #{updatedUserName,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <sql id="MySqlPaginationPrefix" >
    <if test="page != null" >
      SELECT MYSQLPAGE.* FROM ( 
    </if>
  </sql>
  <sql id="MySqlPaginationSuffix" >
    <if test="page != null" >
      <![CDATA[ ) AS MYSQLPAGE ORDER BY ${orderByClause} LIMIT #{page.recordIndex}, #{page.pageSize} ]]>
    </if>
  </sql>
</mapper>